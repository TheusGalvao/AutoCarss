// Importa a classe principal do SDK do Google AI
import { GoogleGenerativeAI } from "https://sdk.withgoogle.com/genai/js/v1/google-genai.js";

// #######################################################################
// # COLE SUA CHAVE DE API AQUI (LEIA O AVISO DE SEGURAN√áA NO TOPO!)     #
// #######################################################################
const API_KEY = "AIzaSyC44QgdNXGF_fwyt4AEmXUoffxm3E0SdH0"; 
// #######################################################################

// --- In√≠cio da configura√ß√£o do App ---

// Inicializa o cliente do Gemini
const genAI = new GoogleGenerativeAI(API_KEY);
const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

document.addEventListener('DOMContentLoaded', () => {
    // Pega os elementos da p√°gina
    const generateBtn = document.getElementById('generate-btn');
    const carInfoInput = document.getElementById('car-info-input');
    const loader = document.getElementById('loader');
    const resultsArea = document.getElementById('results-area');
    const marketplaceOutput = document.getElementById('marketplace-output');
    const socialMediaOutput = document.getElementById('social-media-output');

    // Adiciona o evento de clique no bot√£o principal
    generateBtn.addEventListener('click', async () => {
        const infoCarro = carInfoInput.value;

        if (!infoCarro.trim()) {
            alert('Por favor, insira as informa√ß√µes do ve√≠culo.');
            return;
        }

        // Mostra o loader e esconde os resultados antigos
        loader.style.display = 'block';
        resultsArea.style.display = 'none';

        // Monta o prompt para o Gemini (a instru√ß√£o)
        const prompt = `
        Voc√™ √© um assistente especialista em criar descri√ß√µes de carros para vendas em uma loja chamada Guaru Prime.
        Analise as informa√ß√µes do carro a seguir e gere dois textos, um para "Marketplace" e outro para "Redes Sociais", seguindo EXATAMENTE os modelos fornecidos abaixo.
        Extraia todas as informa√ß√µes necess√°rias do texto de entrada. Se alguma informa√ß√£o espec√≠fica n√£o for fornecida (ex: n√∫mero de portas, cor), deixe o campo correspondente como "[n√£o informado]".

        **Informa√ß√µes do carro fornecidas pelo usu√°rio:**
        ---
        ${infoCarro}
        ---

        **MODELO PARA MARKETPLACE:**
        ---
        [Marca e Modelo] [Vers√£o] [Ano] | [Combust√≠vel] | [C√¢mbio]

        [Breve descri√ß√£o chamativa com pontos fortes do ve√≠culo. Ex: Hatch compacto, econ√¥mico e ideal para o dia a dia. √ìtima op√ß√£o para quem busca conforto e baixo custo de manuten√ß√£o.]

        Informa√ß√µes do ve√≠culo:

        Ano: [Ano]
        Cor: [Cor]
        Combust√≠vel: [Combust√≠vel]
        Quilometragem: [XX.XXX] km
        C√¢mbio: [Manual ou Autom√°tico]
        Motoriza√ß√£o: [1.X]
        N√∫mero de portas: [4]
        Final da placa: [XX]

        Principais equipamentos:

        Ar-condicionado
        Dire√ß√£o el√©trica/hidr√°ulica
        Vidros el√©tricos
        Travas el√©tricas
        Retrovisores el√©tricos
        Central multim√≠dia
        C√¢mera de r√©
        Sensores de estacionamento
        Bancos em couro
        Rodas de liga leve
        Far√≥is de neblina
        Airbags
        Freios ABS

        [Frase final de refor√ßo. Ex: Ve√≠culo em √≥timo estado de conserva√ß√£o, ideal para quem busca economia, conforto e seguran√ßa.]
        ---

        **MODELO PARA REDES SOCIAIS:**
        ---
        [Marca e Modelo] - [Vers√£o] [Motor]

        Ano: [Ano]
        [Quilometragem] Km Rodados
        WhatsApp: 11 2440-2166

        Os melhores seminovos de Guarulhos - SP üöó
        Olha que incr√≠vel esse [tipo de carro], complet√≠ssimo, um SONHO!! üíô‚ú®

        ‚úî Flex
        ‚úî Central Multim√≠dia
        ‚úî Motor [1.X]
        ‚úî C√¢mbio [Autom√°tico ou Manual]
        ‚úî Ar-condicionado
        ‚úî Dire√ß√£o [El√©trica ou Hidr√°ulica]
        ‚úî C√¢mera de R√©
        ‚úî Sensores de Estacionamento
        ‚úî Vidros El√©tricos
        ‚úî Travas El√©tricas
        ‚úî Airbags
        ‚úî Freios ABS
        ‚úî Rodas de Liga Leve

        Tamb√©m aceitamos carros na troca üöó
        Agende sua visita agora! üèÉ‚Äç‚ôÇÔ∏è

        üìç AutoShopping Internacional Guarulhos | R. Anton Philips, 186 | Pr√©dio B, Vila Herm√≠nia - Guarulhos/SP (Localizado no 2¬∞ piso pr√≥ximo √† Wincar)

        Mais informa√ß√µes no link da nossa bio üî•

        #guaruprime #carros #guarulhos #autoshoppinginternacional #multimarcas #seucarronovo #carrobarato #[marca] #[modelo] #[versao] #fotosdecarros
        ---

        Retorne a resposta em formato JSON com duas chaves: "marketplace" e "redes_sociais".
        `;

        try {
            // Gera o conte√∫do usando o SDK
            const result = await model.generateContent(prompt);
            const response = await result.response;
            const text = await response.text();
            
            // Limpa e converte a resposta para JSON
            const cleanedResponse = text.trim().replace("```json", "").replace("```", "");
            const parsedJson = JSON.parse(cleanedResponse);

            // Coloca os textos gerados nos seus lugares
            marketplaceOutput.textContent = parsedJson.marketplace;
            socialMediaOutput.textContent = parsedJson.redes_sociais;

            // Esconde o loader e mostra os resultados
            loader.style.display = 'none';
            resultsArea.style.display = 'block';

        } catch (error) {
            loader.style.display = 'none';
            alert(`Ocorreu um erro ao conectar com a API do Gemini. Verifique sua chave de API e a conex√£o com a internet.\n\nDetalhes: ${error.message}`);
            console.error('Erro ao gerar descri√ß√µes:', error);
        }
    });

    // Adiciona a funcionalidade de "Copiar" para todos os bot√µes
    document.querySelectorAll('.copy-btn').forEach(button => {
        button.addEventListener('click', () => {
            const targetId = button.dataset.target;
            const textToCopy = document.getElementById(targetId).textContent;

            navigator.clipboard.writeText(textToCopy).then(() => {
                const originalText = button.textContent;
                button.textContent = 'Copiado!';
                setTimeout(() => {
                    button.textContent = originalText;
                }, 2000);
            }).catch(err => {
                console.error('Erro ao copiar texto: ', err);
                alert('N√£o foi poss√≠vel copiar o texto.');
            });
        });
    });
});